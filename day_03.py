from helpers.utils import get_puzzle_input
test_input = """..##.........##.........##.........##.........##.........##.......
#...#...#..#...#...#..#...#...#..#...#...#..#...#...#..#...#...#..
.#....#..#..#....#..#..#....#..#..#....#..#..#....#..#..#....#..#.
..#.#...#.#..#.#...#.#..#.#...#.#..#.#...#.#..#.#...#.#..#.#...#.#
.#...##..#..#...##..#..#...##..#..#...##..#..#...##..#..#...##..#.
..#.##.......#.##.......#.##.......#.##.......#.##.......#.##.....
.#.#.#....#.#.#.#....#.#.#.#....#.#.#.#....#.#.#.#....#.#.#.#....#
.#........#.#........#.#........#.#........#.#........#.#........#
#.##...#...#.##...#...#.##...#...#.##...#...#.##...#...#.##...#...
#...##....##...##....##...##....##...##....##...##....##...##....#
.#..#...#.#.#..#...#.#.#..#...#.#.#..#...#.#.#..#...#.#.#..#...#.#"""
# rows = test_input.split("\n")
rows = get_puzzle_input(3, is_viv=True).split("\n")
del rows[0]
trees = 0
position = 0
total = 1
rules = [(1, 1), (3, 1), (5, 1), (7, 1), (1, 2)]
for right, down in rules:
    trees = 0
    position = 0
    row_number = 0
    for line in rows:
        if down > 1:
            row_number += 1
            if row_number % 2 != 0:
                continue
        position += right
        position = position % len(line)
        if line[position] == "#":
            trees += 1
    print(trees)
    total *= trees
print(total)